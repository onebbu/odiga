<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.odiga.mytrip.search.dao.SearchDAO">

    <!-- 여행지 지역별 리스트 가져오기
    <select id="getSearchList" resultType="com.odiga.mytrip.search.vo.SearchVO">
        SELECT * FROM
            ( SELECT a.*, ROWNUM as rn FROM (
                SELECT TL.CONTENTID, TL.TITLE, TL.ADDR1, TL.FIRSTIMAGE, TC.CATTYPE, TL.AREACODE, TL.TRAVELVIEWCOUNT,
                        COALESCE(ROUND(AVG(TR.REVIEWGRADE)), 0) AS averageRate,
                        COALESCE(COUNT(TR.CONTENTID) , 0) AS cntRating
                FROM TRAVELLIST TL
                LEFT JOIN TRAVELREVIEW TR ON TL.CONTENTID = TR.CONTENTID
                LEFT JOIN TRAVELCAT TC ON TL.CAT3 = TC.CATCODE
                WHERE TL.TITLE LIKE '%' || #{searchQuery.get('text'), jdbcType=VARCHAR} || '%'
                <where>
                    <if test="searchQuery.get('areacode') != null and searchQuery.get('areacode') != ''">
                        AND TL.AREACODE = #{searchQuery.get('areacode'), jdbcType=INTEGER}
                    </if>
                    <if test="catList != null and catList.size() > 0">
                        AND TL.CAT3 IN (
                        <foreach item='code' collection='catList' open='(' separator=',' close=')'>
                            #{code}
                        </foreach>
                        )
                    </if>
                </where>
                GROUP BY TL.CONTENTID, TL.TITLE, TL.ADDR1, TL.FIRSTIMAGE, TC.CATTYPE, TL.AREACODE, TL.TRAVELVIEWCOUNT
                ORDER BY <choose>
                    <when test="searchQuery.get('order') == 'title'"> TL.TITLE ASC </when>
                    <when test="searchQuery.get('order') == 'grade'"> averageRate DESC, cntRating DESC </when>
                </choose>
                ) a
            )
        WHERE rn BETWEEN ((#{searchQuery.get('page'), jdbcType=INTEGER} - 1) * 10 + 1) AND (#{searchQuery.get('page'), jdbcType=INTEGER} * 10)
    </select> -->

    <!-- 여행지 지역별 리스트 가져오기 -->
    <select id="getSearchList" resultType="com.odiga.mytrip.search.vo.SearchVO" parameterType="java.util.Map">
        SELECT * FROM
        ( SELECT a.*, ROWNUM as rn FROM (
            SELECT TL.CONTENTID, TL.TITLE, TL.ADDR1, TL.FIRSTIMAGE, TC.CATTYPE AS CAT3, TL.AREACODE, TL.TRAVELVIEWCOUNT,
                    COALESCE(ROUND(AVG(TR.REVIEWGRADE)), 0) AS averageRate,
                    COALESCE(COUNT(TR.CONTENTID) , 0) AS cntRating
            FROM TRAVELLIST TL
            LEFT JOIN TRAVELREVIEW TR ON TL.CONTENTID = TR.CONTENTID
            LEFT JOIN TRAVELCAT TC ON TL.CAT3 = TC.CATCODE
            WHERE TL.title LIKE '%' || #{text} || '%' 
            <choose>
                <when test="areacode != 0">
                    AND TL.AREACODE = #{areacode}
                </when>
                <otherwise></otherwise>
            </choose>
            <choose>
                <when test="catList != null">
                    AND TL.CAT3 IN
                            <foreach item="code" collection="catList" open="(" separator="," close=")">
                                #{code}
                            </foreach>
                </when>
                <otherwise></otherwise>
            </choose>
            GROUP BY TL.CONTENTID, TL.TITLE, TL.ADDR1, TL.FIRSTIMAGE, TC.CATTYPE, TL.AREACODE, TL.TRAVELVIEWCOUNT
            ORDER BY <choose>
                        <when test="order == 'title'"> TL.TITLE </when>
                        <when test="order == 'grade'"> averageRate </when>
                    </choose>
            ) a
        )
    WHERE rn BETWEEN ((#{page} - 1) * 10 + 1) AND (#{page} * 10)
    </select>

    <!-- 여행코스 후기 검색결과 가져오기-->
    <select id="getSearchCourseList" resultType="com.odiga.mytrip.search.vo.SearchCourseVO" parameterType="java.util.Map">
        SELECT *
        FROM (
        SELECT t.*, ROW_NUMBER() OVER (
        <choose>
            <when test="order == 'boardtitle'">
                ORDER BY t.BOARDTITLE
            </when>
            <when test="order == 'boardgrade'">
                ORDER BY t.BOARDGRADE DESC
            </when>
            <when test="order == 'boarddate'">
                ORDER BY t.BOARDDATE DESC
            </when>
        </choose>
        ) AS row_num
        FROM COURSEREVIEW t
        WHERE t.BOARDTITLE LIKE '%' || #{text} || '%' OR t.TAGS LIKE '%' || #{text} || '%'
        AND t.BOARDYN = 'Y'
        ) sub
        WHERE sub.row_num BETWEEN ((#{page} - 1) * 10 + 1) AND (#{page} * 10)
    </select>


    <select id="getResultCount" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(*)
            FROM TRAVELLIST
                WHERE areacode = #{areacode}
                AND title LIKE '%' || #{text} || '%'
                <choose>
                    <when test="catcode != null">
                        AND cat3 = #{catcode}
                    </when>
                </choose>
    </select>

    <select id="getCourseResultCount" resultType="int" parameterType="java.util.Map">
        SELECT count(*)
        FROM COURSEREVIEW
        WHERE BOARDTITLE LIKE '%' || #{text} || '%'
           OR TAGS LIKE '%' || #{text} || '%'
    </select>


    <select id="getCatList" resultType="com.odiga.mytrip.search.vo.CatVO">
        SELECT *
        FROM TRAVELCAT
    </select>

    <!-- 여행지별 리뷰 평균 별점 조회 placeList에서 가져온거 커스텀해야함.
    <select id="getPlaceRate" resultType="java.util.Map" parameterType="String">
        SELECT NVL(ROUND(AVG(REVIEWGRADE)),0) AS "averageRate", count(*) as "cntRating"
        FROM TRAVELREVIEW
        WHERE contentid = #{contentID}
    </select> -->

    <!-- 지역별 여행지 수(카테고리, 지역 필터링) -->
    <select id="getResultAreaCount" resultType="int" parameterType="java.util.Map">
        SELECT count(*)
        FROM TRAVELLIST
        WHERE areacode = #{areacode}
        and title LIKE '%' || #{text,jdbcType=VARCHAR} || '%'
        <choose>
            <when test="catcode != null and catcode.size() > 0">
                AND cat3 IN
                            <foreach item="code" collection="catcode" open="(" separator="," close=")">
                                #{code}
                            </foreach>
            </when>
        </choose>
    </select>
</mapper>

